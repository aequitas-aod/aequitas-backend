openapi: 3.0.0
info:
  title: Project and Question API
  description: API for managing projects and questions
  version: 1.0.0
tags:
  - name: Projects
    description: Operations related to projects
  - name: Questions
    description: Operations related to questions
  - name: Questionnaires
    description: Operations related to projects questionnaires
paths:
  /projects:
    get:
      summary: Get all projects
      tags: [ Projects ]
      responses:
        200:
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./schemas.yaml#/components/schemas/Project"
    post:
      summary: Create a new project
      tags: [ Projects ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/Project'
      responses:
        201:
          description: The resource was created successfully
        400:
          description: The request was invalid

  /projects/{id}:
    get:
      summary: Get a project
      tags: [ Projects ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the project
      responses:
        200:
          description: The project with the specified ID
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/Project'
        400:
          description: The request was invalid

    put:
      summary: Update a project
      tags: [ Projects ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/Project'
      responses:
        200:
          description: The project was updated successfully
        400:
          description: The request was invalid

    delete:
      summary: Delete all projects
      tags: [ Projects ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the project
      responses:
        204:
          description: The resource was deleted successfully
        400:
          description: The request was invalid

  /questions:
    get:
      summary: Get all questions
      tags: [ Questions ]
      responses:
        200:
          description: The list of all questions

    post:
      summary: Create a new question
      tags: [ Questions ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/Question'
      responses:
        201:
          description: The question was created successfully
        400:
          description: Invalid input

  /questions/{id}:
    get:
      summary: Get a question
      tags: [ Questions ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the question
      responses:
        200:
          description: The question with the specified ID
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/Question'
        400:
          description: Invalid input

    put:
      summary: Update a question
      tags: [ Questions ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/Question'
      responses:
        200:
          description: The question was updated successfully
        400:
          description: The request was invalid

    delete:
      summary: Delete a question
      tags: [ Questions ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the question
      responses:
        204:
          description: The resource was deleted successfully
        400:
          description: The request was invalid


  /projects/{id}/questionnaire:
    get:
      summary: Get all questions filled in by the user for a project
      tags: [ Questionnaires ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the project
      responses:
        200:
          description: The actual list of questions composing the questionnaire of the project

    delete:
      summary: Delete all questions filled in by the user for a project
      tags: [ Questionnaires ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the project
      responses:
        204:
          description: Questions deleted successfully

  /projects/{id}/questionnaire/{number}:
    get:
      summary: Get the n-th question of project questionnaire
      tags: [ Questionnaires ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the project
        - in: path
          name: number
          required: true
          schema:
            type: integer
            description: Number of the question
      responses:
        200:
          description: The actual list of questions composing the questionnaire of the project
        400:
          description: The request was invalid

    put:
      summary: Update the n-th question of project questionnaire,
        this operation implies the deletion of all successive questions
      tags: [ Questionnaires ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: ID of the project
        - in: path
          name: number
          required: true
          schema:
            type: integer
            description: Number of the question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/Question'
      responses:
        200:
          description: The question was updated successfully
        400:
          description: The request was invalid
