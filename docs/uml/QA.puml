@startuml

entity Project {
  +id: ProjectId
  +name: string
}

entity ProjectId {
  +code: string
}

entity Answer {
  +value: string
  +text: string
}

entity Question {
  +id: QuestionId
  +text: string
  +type: QuestionType
  +availableAnswers: Set<Answer>
  +selectedAnswers: Set<Answer>
  +selectAnswer(answer): Question
  +deselectAnswer(answer): Question
  +actionNeeded: Action
}

entity SelectionStrategy(?)

entity QuestionId {
  +code: string
}

entity ProjectFactory {
  +createProject(projectId, name): Project
}

entity AnswerFactory {
  +createAnswer(text, value): Answer
  +createBooleanAnswer(value): Answer
}

entity QuestionFactory {
  +createQuestion(questionId, text, questionType,
  availableAnswers, selectedAnswers, actionNeeded)
  +createBooleanQuestion(id, text, actionNeeded): Question
}

entity QuestionRepository {
  +getAllQuestions(): Set<Question>
  +getQuestionById(questionId): Question
  +insertQuestion(question): void
  +updateQuestion(questionId, question): void
  +deleteQuestion(questionId): void
}

entity QuestionService {
  +getNextQuestion(projectId, previousQuestion): Question
  +goBackToQuestion(projectId, question): Question
  +resetQuestionnaire(projectId): void
}

enum Action {
  METRICS_CHECK
}

enum QuestionType {
  BOOLEAN
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  RATING
}

Project -* ProjectId
ProjectFactory --> Project : creates
AnswerFactory --> Answer : creates
QuestionFactory --> Question : creates
QuestionRepository -right-> Question : uses
QuestionService -up-> QuestionRepository : uses
QuestionService --> Project : uses
Question o-right- Answer
Question *-- QuestionId
Question *-- QuestionType
Question *-- "0..1" Action

note right of Question : entity
note right of Answer : value object
note left of QuestionService : service


@enduml