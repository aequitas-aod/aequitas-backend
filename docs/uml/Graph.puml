@startuml

entity Answer {
  +id: AnswerId
  +value: string
  +text: string
}

entity AnswerId {
  +code: string
}

entity Question {
  +id: QuestionId
  +text: string
  +type: QuestionType
  +availableAnswers: Set<Answer>
  +previousQuestionId: Optional<QuestionId>
  +enabledBy: Set<AnswerId>
  +actionNeeded: Optional<Action>
}

entity QuestionId {
  +code: string
}

entity AnswerFactory {
  +createAnswer(answerId, text, value): Answer
  +createBooleanAnswer(answerId, value): Answer
}

entity QuestionFactory {
  +createQuestion(questionId, text, questionType, availableAnswers,
  previousQuestionId, enabledBy, actionNeeded): Question
  +createBooleanQuestion(questionId, text, previousQuestionId,
  enabledBy, actionNeeded): Question
}

entity QuestionRepository {
  +getAllQuestions(): List<Question>
  +getQuestionById(questionId): Optional<Question>
  +insertQuestion(question): void
  +updateQuestion(questionId, question): void
  +deleteQuestion(questionId): void
}

entity QuestionService {
  +getAllQuestions(): List<Question>
  +getQuestionById(questionId): Optional<Question>
  +addQuestion(question): void
  +updateQuestion(questionId, question): void
  +deleteQuestion(questionId): void
}

enum Action {
  METRICS_CHECK
}

enum QuestionType {
  BOOLEAN
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  RATING
}

Answer *- AnswerId
AnswerFactory --> Answer : creates
QuestionFactory --> Question : creates
QuestionRepository -right-> Question : uses
QuestionService o-up- QuestionRepository
Question o-right- Answer
Question *-- QuestionId
Question *-- QuestionType
Question *-- "0..1" Action




@enduml