name: CI/CD
on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '.gitignore'
      - '.mergify.yml'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'README.md'
      - 'renovate.json'
  pull_request:
  workflow_dispatch:

env:
  ENV: test
  DB_USER: neo4j
  DB_HOST: localhost
  DB_PASSWORD: password

jobs:
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
    runs-on: ${{ matrix.os }}
    name: Run unit tests on Python ${{ matrix.python-version }}, on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry and poethepoet
        run: |
          pipx install poetry
          pipx install poethepoet

      - name: Check poetry
        run: poetry check

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Check syntax of Python sources
        run: python -m compileall ws test

      - name: Run tests
        run: poe unit-test

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
    runs-on: ${{ matrix.os }}
    name: Run integration tests on Python ${{ matrix.python-version }}, on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry and poethepoet
        run: |
          pipx install poetry
          pipx install poethepoet

      - name: Check poetry
        run: poetry check

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poe integration-test

  release:
    needs:
      - unit-test
      - integration-test
      - style
    if: github.ref_name == 'main'
    uses: ./.github/workflows/release.yml
  #    secrets: inherit

  style:
    runs-on: ubuntu-latest
    name: Check code style
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry and poethepoet
        run: |
          pipx install poetry
          pipx install poethepoet

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Check code style
        run: poe format-check