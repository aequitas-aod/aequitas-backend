name: CI/CD
on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '.gitignore'
      - '.mergify.yml'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'README.md'
      - 'renovate.json'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
    runs-on: ${{ matrix.os }}
    name: Run tests on Python ${{ matrix.python-version }}, on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Check poetry
        run: poetry check

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Check syntax of Python sources
        run: python -m compileall ws test run_tests.py

      - name: Run tests
        run: poetry run python run_tests.py

  release:
    needs:
      - test
    if: github.ref_name == 'main'
    uses: ./.github/workflows/release.yml
#    secrets: inherit

  style:
    runs-on: ubuntu-latest
    name: Check code style
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Check code style
        run: poetry run black --check .