[tool.poetry]
name = "Aequitas Backend"
version = "0.1.0"
description = "Backend service of for Aequitas project"
authors = ["aequitas-aod"]
packages = [
    { include = "domain" },
    { include = "application" },
    { include = "presentation" },
    { include = "infrastructure" },
    { include = "utils" },
]

[tool.poetry.dependencies]
python = ">= 3.10.0, < 4.0.0"
flask = "3.1.0"
flask-restful = "0.3.10"
requests = "2.32.3"
waitress = "3.0.2"
python-dotenv = "1.0.1"
pydantic = "2.10.2"
neo4j = "5.27.0"
flask-cors = "5.0.0"
pyyaml = "6.0.2"
backoff = "2.2.1"
shortuuid = "1.0.13"
coverage = "^7.6.1"
pandas = "^2.2.3"
kafka-python-ng = "^2.2.3"
matplotlib = "^3.10.0"
scikit-learn = "^1.6.0"

[tool.poetry.group.dev.dependencies]
black = "24.10.0"
python-on-whales = "0.74.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
test = { cmd = "python -m unittest discover -v -t . -s test -p 'test_*.py'", env = { ENV = "test" } }
unit-test = { cmd = "python -m unittest discover -v -t . -s test/unit -p 'test_*.py'", env = { ENV = "test" } }
integration-test = { cmd = "python -m unittest discover -v -t . -s test/integration -p 'test_*.py'", env = { ENV = "test" } }
coverage = { cmd = "coverage run -m unittest discover -v -t . -s test -p 'test_*.py'", env = { ENV = "test" } }
coverage-report = "coverage report"
format-check = "black --check ."
format = "black ."

[tool.poe.tasks.dev]
shell = "ENV=develop flask --app infrastructure/ws/main.py run -h localhost -p $port"
args = ["port"]

[tool.poe.tasks.serve]
shell = "ENV=production waitress-serve --port $port --call infrastructure.ws.main:create_app"
args = ["port"]